import matplotlib.pyplot as plt
import numpy as np

# Simulate points in 2D space
np.random.seed(0)

# Generate training set: Gaussian blob centered left
train_x = np.random.normal(loc=40, scale=10, size=150)
train_y = np.random.normal(loc=60, scale=10, size=150)
train_set = set(zip(train_x.round(1), train_y.round(1)))

# Generate validation set: Gaussian blob centered slightly right
val_x = np.random.normal(loc=50, scale=10, size=150)
val_y = np.random.normal(loc=60, scale=10, size=150)
val_set = set(zip(val_x.round(1), val_y.round(1)))

# Find overlaps
common_set = train_set & val_set
train_only = train_set - common_set
val_only = val_set - common_set

# Plotting
fig, ax = plt.subplots(figsize=(8, 6))

# Train-only
if train_only:
    tx, ty = zip(*train_only)
    ax.scatter(tx, ty, color='blue', label='Train Only', alpha=0.5)

# Val-only
if val_only:
    vx, vy = zip(*val_only)
    ax.scatter(vx, vy, color='green', label='Validation Only', alpha=0.5)

# Common
if common_set:
    cx, cy = zip(*common_set)
    ax.scatter(cx, cy, color='red', edgecolors='black', label='Common', s=60)

# Labels
ax.set_title("Venn-style 2D Set Overlap (Simulated Layout Sampling)")
ax.set_xlabel("CD (or Feature X)")
ax.set_ylabel("Pitch (or Feature Y)")
ax.grid(True)
ax.legend()
plt.tight_layout()
plt.show()