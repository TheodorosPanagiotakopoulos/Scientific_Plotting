import numpy as np
import matplotlib.pyplot as plt
from matplotlib_venn import venn3

# Helper to generate (CD, Pitch) pairs
def generate_pattern_pairs(tone):
    if tone == 1:
        pitch1 = np.arange(40, 240+1, 8)
        pitch2 = np.arange(260, 400+1, 20)
    else:
        pitch1 = np.arange(200, 250+1, 8)
        pitch2 = np.arange(260, 400+1, 20)
    pitches = np.concatenate([pitch1, pitch2])
    cd_vals = np.concatenate([
        np.arange(12, 72+1, 4),
        np.arange(80, 120+1, 8),
        np.arange(136, 200+1, 16)
    ])
    CDs, Pitches = np.meshgrid(cd_vals, pitches)
    return set(zip(CDs.flatten(), Pitches.flatten()))

# Generate validation (CD, Pitch) pairs
val_cd = np.arange(20, 200+1, 2)
val_pairs = set()
for cd in val_cd:
    for mult in [2, 3, 4]:
        val_pairs.add((cd, mult*cd))
    val_pairs.add((cd, 1000))

# Define the sets
set_A = generate_pattern_pairs(1)   # Pattern Tone 1
set_B = generate_pattern_pairs(-1)  # Pattern Tone -1
set_C = val_pairs                   # Validation

# Plot the Venn diagram
plt.figure(figsize=(8, 6))
venn3([set_A, set_B, set_C], ('Pattern Tone 1', 'Pattern Tone -1', 'Validation Tone 1'))
plt.title("Overlap of CD-Pitch Pairs (1DLS)")
plt.show()