import matplotlib.pyplot as plt
import numpy as np

def plot_dual_trend(data, degree=1, start=0, threshold=0):
    """
    Plot data and two trend lines: one before and one after the threshold.
    
    Parameters:
    - data (list): List of numeric values.
    - degree (int): Degree of the polynomial trend (default is 1).
    - start (int): Starting value for x-axis.
    - threshold (int): Index to split the two trend segments.
    """
    x = np.arange(start, start + len(data))
    y = np.array(data)

    # Plot original data
    plt.plot(x, y, label="Original Data", marker='o', linestyle='-', alpha=0.5)

    # --- Trend 1: Start to threshold ---
    x1 = x[:threshold+1]
    y1 = y[:threshold+1]
    z1 = np.polyfit(x1, y1, degree)
    p1 = np.poly1d(z1)
    plt.plot(x1, p1(x1), label="Trend 1 (start to %d)" % threshold, linewidth=2)

    # Print slope and angle if linear
    if degree == 1:
        slope1 = z1[0]
        angle1 = np.degrees(np.arctan(slope1))
        print("Trend 1 Slope: %.6e, Angle: %.6f°" % (slope1, angle1))

    # --- Trend 2: Threshold to end ---
    x2 = x[threshold:]
    y2 = y[threshold:]
    z2 = np.polyfit(x2, y2, degree)
    p2 = np.poly1d(z2)
    plt.plot(x2, p2(x2), label="Trend 2 (%d to end)" % threshold, linewidth=2, linestyle='--')

    if degree == 1:
        slope2 = z2[0]
        angle2 = np.degrees(np.arctan(slope2))
        print("Trend 2 Slope: %.6e, Angle: %.6f°" % (slope2, angle2))

    # Final plot details
    plt.title("Data with Two Trend Segments")
    plt.xlabel("X")
    plt.ylabel("Value")
    plt.legend()
    plt.grid(True)
    plt.show()