#!/bin/bash

OUTPUT_FILE="output.txt"
> "$OUTPUT_FILE"  # Clear output file

exec 3>&1  # Save original stdout (FD 3)
exec > "$OUTPUT_FILE" 2>&1  # Redirect stdout/stderr to file

# Highlight key phrases
highlight_special_phrases() {
    sed -E "
        s/(no such file or directory)/$(printf '\033[1;31m')\1$(printf '\033[0m')/Ig;
        s/(does not exist)/$(printf '\033[1;31m')\1$(printf '\033[0m')/Ig;
        s/(doesn[â€™']t exist)/$(printf '\033[1;31m')\1$(printf '\033[0m')/Ig;
        s/(memory)/$(printf '\033[1;35m')\1$(printf '\033[0m')/Ig
    "
}

# Spinner animation on same line
spinner_running=true
spinner() {
    dots=("" "." ".." "...")
    i=0
    while $spinner_running; do
        printf "\rLocating log files%s   " "${dots[i]}" >&3
        i=$(( (i + 1) % 4 ))
        sleep 0.5
    done
}

# Start spinner
spinner &
spinner_pid=$!

# Locate log files in background
log_files=()
mapfile -d '' subdirs < <(find . -type d -print0)
for dir in "${subdirs[@]}"; do
    shopt -s nullglob
    for logfile in "$dir"/*.log; do
        [[ -f "$logfile" ]] || continue
        log_files+=("$logfile")
    done
done

# Stop spinner and clear line
spinner_running=false
wait "$spinner_pid" 2>/dev/null
printf "\rFound %d .log files.%s\n" "${#log_files[@]}" "                     " >&3

# Progress bar
show_progress() {
    local progress=$(( 100 * count / total ))
    local bar_width=50
    local filled=$(( progress * bar_width / 100 ))
    local bar=$(printf "%${filled}s" | tr ' ' '#')
    bar=$(printf "%-${bar_width}s" "$bar")
    printf "\rProcessing: [%s] %3d%% (%d/%d)" "$bar" "$progress" "$count" "$total" >&3
}

# Process individual log file
process_logfile() {
    local logfile="$1"
    local dir
    dir=$(dirname "$logfile")

    error_tmp=$(mktemp)
    fail_tmp=$(mktemp)

    awk '{IGNORECASE=1} /error/ && $0 !~ /error *;/ {print}' "$logfile" > "$error_tmp"
    grep -i 'fail' "$logfile" > "$fail_tmp"

    if [[ -s "$error_tmp" || -s "$fail_tmp" ]]; then  
        echo "In directory: $dir"  
        echo "  Log file: $logfile"  

        if [[ -s "$error_tmp" ]]; then  
            echo "    Matches for 'error':"  
            GREP_COLOR='1;32' grep --color=always -i 'error' "$error_tmp" | highlight_special_phrases
        fi  

        if [[ -s "$fail_tmp" ]]; then  
            echo "    Matches for 'fail':"  
            GREP_COLOR='1;33' grep --color=always -i 'fail' "$fail_tmp" | highlight_special_phrases
        fi  

        echo  
    fi  

    rm -f "$error_tmp" "$fail_tmp"
}

# Process all log files with progress bar
total=${#log_files[@]}
count=0

for logfile in "${log_files[@]}"; do
    ((count++))
    show_progress
    process_logfile "$logfile"
done

# Final message
echo -e "\nDone. Output saved to $OUTPUT_FILE" >&3