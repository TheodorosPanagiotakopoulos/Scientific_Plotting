#!/bin/bash

OUTPUT_FILE="output.txt"
: > "$OUTPUT_FILE"
exec 3>&1 1>"$OUTPUT_FILE" 2>&1

# Highlight key phrases
highlight_special_phrases() {
    sed -E \
        -e 's/(no such file or directory)/\033[0;33m\1\033[0m/Ig' \
        -e 's/(does not exist|doesn.t exist)/\033[0;31m\1\033[0m/Ig' \
        -e 's/(memory)/\033[0;35m\1\033[0m/Ig'
}

# Real-time log file collection with ticker-style animation on one line
log_files=()
suffixes=('.' '..' '...')
dot_cycle=0
log_count=0
output_line=""

subdirs=( $(find . -type d -print0 | xargs -0) )
for dir in "${subdirs[@]}"; do
    for logfile in "$dir"/*.log; do
        [[ -f "$logfile" ]] || continue
        log_files+=("$logfile")
        suffix=${suffixes[$dot_cycle]}
        output_line="${log_count}.log found${suffix} "
        printf "\r%s" "$output_line" >&3
        ((log_count++))
        ((dot_cycle=(dot_cycle+1)%3))
    done
done

# Show progress bar (in same line)
show_progress() {
    local progress=$(( 100 * count / total ))
    local bar_width=50
    local filled=$(( progress * bar_width / 100 ))
    local bar=$(printf "%${filled}s" | tr ' ' '#')
    bar=$(printf "%-${bar_width}s" "$bar")
    printf "\rProcessing [%s]: %3d%% (%d/%d)" "$bar" "$progress" "$count" "$total" >&3
}

# Process individual log file
process_logfile() {
    local logfile="$1"
    local dir
    dir=$(dirname "$logfile")

    error_tmp=$(mktemp)
    fail_tmp=$(mktemp)

    awk '{IGNORECASE=1} /error/ && $0 !~ /error *;/ {print}' "$logfile" > "$error_tmp"
    grep -i 'fail' "$logfile" > "$fail_tmp"

    if [[ -s "$error_tmp" || -s "$fail_tmp" ]]; then
        echo -e "\nIn directory: $dir" >&3
        echo "  Log file: $logfile" >&3

        if [[ -s "$error_tmp" ]]; then
            echo "  Matches for 'error':" >&3
            GREP_COLOR='1;32' grep --color=always -i 'error' "$error_tmp" | highlight_special_phrases >&3
        fi

        if [[ -s "$fail_tmp" ]]; then
            echo "  Matches for 'fail':" >&3
            GREP_COLOR='1;33' grep --color=always -i 'fail' "$fail_tmp" | highlight_special_phrases >&3
        fi
    fi

    rm -f "$error_tmp" "$fail_tmp"
}

# Process all log files with progress bar
total=${#log_files[@]}
count=0
for logfile in "${log_files[@]}"; do
    ((count++))
    show_progress
    process_logfile "$logfile"
done

# Final line
echo -e "\nDone. Output saved to $OUTPUT_FILE" >&3